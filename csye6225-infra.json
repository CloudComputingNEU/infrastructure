{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Netowrks and cloud computing - infrastructure as a code -assignment 3",
    "Parameters": {
        "Name": {
            "Type": "String",
            "Description": "Default Name for the infrastructure"
        },
        "VPCCIDR": {
            "Type": "String",
            "Description": "IP Address range for the VPC",
            "Default": "10.1.0.0/16"
        },
        "Subnet1CIDR": {
            "Type": "String",
            "Description": "IP Address range for the Subnet 1",
            "Default": "10.1.1.0/24"
        },
        "Subnet2CIDR": {
            "Type": "String",
            "Description": "IP Address range for the Subnet 2",
            "Default": "10.1.2.0/24"
        },
        "Subnet3CIDR": {
            "Type": "String",
            "Description": "IP Address range for the Subnet 3",
            "Default": "10.1.3.0/24"
        },
        "AmiId":{
          "Type":"String",
          "Description":"Ami instance id"
        },
        "ApplicationInstanceType":{
          "Type":"String",
          "Description":"ami type",
          "Default":"t2.micro"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "Tags":
                [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "Name"
                        }
                    }
                ]
            }
        },
        "Subnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select":
                    [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "Subnet1CIDR"
                },
                "Tags":
                [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${Name} Subnet 1 in AvailabilityZone 0"
                        }
                    }
                ]
            }
        },
        "Subnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select":
                    [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "Subnet2CIDR"
                },
                "Tags":
                [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${Name} Subnet 2 in AvailabilityZone 1"
                        }
                    }
                ]
            }
        },
        "Subnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select":
                    [
                        "2",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "Subnet3CIDR"
                },
                "Tags":
                [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${Name} Subnet 3 in AvailabilityZone 2"
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags":
                [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "Name"
                        }
                    }
                ]
            }
        },
        "VPCInternetGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags":
                [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${Name} Public Routing Table"
                        }
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "VPCInternetGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "Subnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet1"
                }
            }
        },
        "Subnet2RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet2"
                }
            }
        },
        "Subnet3RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "Subnet3"
                }
            }
        },
        "ApplicationSecurityGroup":{
          "Type" :"AWS::EC2::SecurityGroup",
          "Properties":{
            "GroupDescription":"Enabling ssh and port access",
            "VpcId" :{
              "Ref":"VPC"
            },
            "SecurityGroupIngress":[
                {
                  "IpProtocol" : "tcp",
                  "FromPort" : 22,
                  "ToPort" : 22,
                  "CidrIp" : "0.0.0.0/0"
              },
              {
                  "IpProtocol" : "tcp",
                  "FromPort" : 80,
                  "ToPort" : 80,
                  "CidrIp" : "0.0.0.0/0"
              },
              {
                  "IpProtocol" : "tcp",
                  "FromPort" : 443,
                  "ToPort" : 443,
                  "CidrIp" : "0.0.0.0/0"
              },
              {
                  "IpProtocol" : "tcp",
                  "FromPort" : 8080,
                  "ToPort" : 8080,
                  "CidrIp" : "0.0.0.0/0"
              }
            ]
          }
        },
        "ApplicationEC2Instances":{
          "Type":"AWS::EC2::Instance",
          "DependsOn":"PublicRoute",
          "Properties":{
            "InstanceType":{
              "Ref":"ApplicationInstanceType"
            },
            "NetworkInterfaces":[{
              "AssociatePublicIpAddress": true,
              "DeleteOnTermination": true,
              "SubnetId":{
                "Ref":"Subnet1"
              },
              "DeviceIndex":0,
              "GroupSet":[{
                "Ref":"ApplicationSecurityGroup"
              }]
            }],
            "KeyName":"dheeraj-mac-laptop",
            "ImageId":{
              "Ref":"AmiId"
            },
            "BlockDeviceMappings":[{
              "DeviceName":"/dev/xvda",
              "Ebs":{
                "VolumeType":"gp2",
                "DeleteOnTermination":true,
                "VolumeSize":"20"
              }
              }],
            "Tags":[{
              "Key":"Name",
              "Value":"App Server"
            }]
          }
        }
    },
    "Outputs": {
        "VPCId": {
            "Description": "newly created VPC details",
            "Value": {
                "Ref": "VPC"
            }
        }
    }
}